{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jonathan Softinix\\\\Desktop\\\\react-redux\\\\andelaProgramming\\\\src\\\\App\\\\Utils\\\\route.js\";\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport propType from 'prop-types';\nimport RoutesName from '../Config/routes';\nexport const CustomRouter = ({\n  component: Component,\n  authenticated,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authenticated === rest.auth && rest.access === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 6\n    }, this) : authenticated === true && rest.access === false ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: RoutesName.auth.order,\n        state: {\n          from: props.children\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }, this) : authenticated === false && rest.access === true ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: RoutesName.auth.login,\n        state: {\n          from: props.children\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n_c = CustomRouter;\nCustomRouter.prototypes = {\n  authenticated: propType.bool.isRequiredl\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.AuthReducer.authenticated\n});\n\nexport default connect(mapStateToProps)(CustomRouter);\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomRouter\");","map":{"version":3,"sources":["C:/Users/Jonathan Softinix/Desktop/react-redux/andelaProgramming/src/App/Utils/route.js"],"names":["Redirect","Route","connect","propType","RoutesName","CustomRouter","component","Component","authenticated","rest","props","auth","access","pathname","order","state","from","children","login","prototypes","bool","isRequiredl","mapStateToProps","AuthReducer"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAQC,QAAR,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC1BC,EAAAA,SAAS,EAAEC,SADe;AAE5BC,EAAAA,aAF4B;AAG5B,KAAGC;AAHyB,CAAD,KAItB;AACH,sBACD,QAAC,KAAD,OACKA,IADL;AAEC,IAAA,MAAM,EAAEC,KAAK,IACZF,aAAa,KAAKC,IAAI,CAACE,IAAvB,IAA+BF,IAAI,CAACG,MAAL,KAAgB,IAA/C,gBACC,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,YADD,GAEIF,aAAa,KAAK,IAAlB,IAA0BC,IAAI,CAACG,MAAL,KAAgB,KAA1C,gBACH,QAAC,QAAD;AACC,MAAA,EAAE,EAAE;AACHC,QAAAA,QAAQ,EAAET,UAAU,CAACO,IAAX,CAAgBG,KADvB;AAEHC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEN,KAAK,CAACO;AAAd;AAFJ;AADL;AAAA;AAAA;AAAA;AAAA,YADG,GAOAT,aAAa,KAAK,KAAlB,IAA2BC,IAAI,CAACG,MAAL,KAAgB,IAA3C,gBACH,QAAC,QAAD;AACC,MAAA,EAAE,EAAE;AACHC,QAAAA,QAAQ,EAAET,UAAU,CAACO,IAAX,CAAgBO,KADvB;AAEHH,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEN,KAAK,CAACO;AAAd;AAFJ;AADL;AAAA;AAAA;AAAA;AAAA,YADG,gBAQH,QAAC,SAAD,OAAeP;AAAf;AAAA;AAAA;AAAA;AAAA;AApBH;AAAA;AAAA;AAAA;AAAA,UADC;AA0BF,CA/BM;KAAML,Y;AAgCbA,YAAY,CAACc,UAAb,GAA0B;AACzBX,EAAAA,aAAa,EAAEL,QAAQ,CAACiB,IAAT,CAAcC;AADJ,CAA1B;;AAIA,MAAMC,eAAe,GAAGP,KAAK,KAAK;AACjCP,EAAAA,aAAa,EAAEO,KAAK,CAACQ,WAAN,CAAkBf;AADA,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAAEoB,eAAF,CAAP,CAA0BjB,YAA1B,CAAf","sourcesContent":["import { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport  propType  from 'prop-types';\r\nimport RoutesName from '../Config/routes';\r\n\r\nexport const CustomRouter = ({\r\n   component: Component,\r\n\tauthenticated,\r\n\t...rest\r\n}) => {\r\n   return(\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={props =>\r\n\t\t\t\tauthenticated === rest.auth && rest.access === true ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) : authenticated === true && rest.access === false ? (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: RoutesName.auth.order,\r\n\t\t\t\t\t\t\tstate: { from: props.children },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : authenticated === false && rest.access === true ? (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: RoutesName.auth.login,\r\n\t\t\t\t\t\t\tstate: { from: props.children },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n   );\r\n};\r\nCustomRouter.prototypes = {\r\n\tauthenticated: propType.bool.isRequiredl,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tauthenticated: state.AuthReducer.authenticated,\r\n});\r\n\r\nexport default connect (mapStateToProps)(CustomRouter);\r\n"]},"metadata":{},"sourceType":"module"}